// BSD 3-Clause License
// 
// Copyright (c) 2022, Rahul Kumar
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
// 
// 1. Redistributions of source code must retain the above copyright notice, this
//    list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.
// 
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived from
//    this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file contains ProtocolBuffer definitions for running
// layout vs. schematic (LVS) using EdaTool.

syntax = "proto3";

package edatool.lvs.v1;

// The tool to use to perform LVS.
enum LvsTool {
  // The default, if no other LVS tool is specified.
  // Passing this to EdaTool is likely to result in
  // errors or crashes.
  LVS_TOOL_UNSPECIFIED = 0;
  // Use a tool not explicitly supported by the EdaTool API.
  // Users are responsible for providing their own EdaTool plugin.
  LVS_TOOL_OTHER = 1;
  // Extract a layout netlist using magic,
  // then compare the extracted netlist with the
  // provided netlist using netgen.
  LVS_TOOL_MAGIC_NETGEN = 2;
  // Perform a comparison using Mentor Graphics Calibre.
  // This is a proprietary tool. Users must have a license
  // and access to the EdaTool Calibre plugin before using
  // this option.
  LVS_TOOL_CALIBRE = 3;
}

// The input to EdaTool's LVS interface.
message LvsInput {
  // The file system path where the netlist is saved.
  // Should be an absolute path.
  string netlist_path = 1;

  // The file system path where the layout is saved.
  // Should be an absolute path.
  string layout_path = 2;

  // The name of the cell in the netlist that should
  // be compared.
  string netlist_cell = 3;
  // The name of the cell in the layout that should
  // be compared.
  string layout_cell = 4;
  // The tool to use to perform LVS.
  LvsTool tool = 5;
  // The name of the technology to use.
  // For Skywater 130nm, use "sky130".
  string tech = 6;

  // Additional unstructured options to pass to the LVS tool.
  // Not directly used by EdaTool.
  map<string, string> options = 10;
}

// The result of an LVS comparison.
message LvsOutput {
  // Indicates whether the netlist and the layout match.
  // If the netlist and layout match, no errors should be generated.
  bool matches = 1;
  // A list of errors generated by the LVS tool.
  // If the netlist and layout match, no errors should be generated.
  repeated LvsError errors = 2;
  // A list of warnings generated by the LVS tool.
  repeated LvsWarning warnings = 3;
}

// An error discovered while comparing a netlist with a layout.
message LvsError {
  // Description of the error.
  string description = 1;
}

// A warning discovered while comparing a netlist with a layout.
message LvsWarning {
  // Description of the warning.
  string description = 1;
}

